@using static NFC.Data.Common.NFCUtil
@model PaginatedList<NFC.Data.Entities.KT_TW_SPL>
@{
	ViewData["Title"] = "KT TW SPL List";
	int currentPage = Model.PageIndex;
	int pageSize = Model.PageSize;
	int totalPages = Model.TotalPages;
	int startPage = Math.Max(1, currentPage - 2);
	int endPage = Math.Min(totalPages, currentPage + 2);
}
<div class="row">
	<div class="col-lg-4 col-6">
		<!-- small box -->
		<div class="small-box bg-info">
			<div class="inner">
				<h3>@ViewData["NewDataUpload"]</h3>

				<p>New Datas Upload</p>
			</div>
			<div class="icon">
				<i class="ion ion-ios-list"></i>
			</div>
		</div>
	</div>
	<!-- ./col -->
	<div class="col-lg-4 col-6">
		<!-- small box -->
		<div class="small-box bg-success">
			<div class="inner">
				<h3>@ViewData["ToTalPass"]<sup style="font-size: 20px">%</sup></h3>

				<p>Passed</p>
			</div>
			<div class="icon">
				<i class="ion ion-checkmark-round"></i>
			</div>
		</div>
	</div>
	<!-- ./col -->
	<div class="col-lg-4 col-6">
		<!-- small box -->
		<div class="small-box bg-danger">
			<div class="inner">
				<h3>@ViewData["ToTalFail"]<sup style="font-size: 20px">%</sup></h3>

				<p>Failed</p>
			</div>
			<div class="icon">
				<i class="ion ion-close-round"></i>
			</div>
		</div>
	</div>
</div>
<div class="card">
	<div class="card-header">
		<form asp-action="Index" method="get">

			<div class="row">
				<div class="col-md-2">
					<div class="form-group">
						<label for="fromDate">From Date:</label>
						<input type="date" name="fromDate" value="@(((DateTime)ViewData["CurrentFromDate"]).ToString("yyyy-MM-dd"))" class="form-control" />
					</div>
				</div>
				<div class="col-md-2">
					<div class="form-group">
						<label for="toDate">To Date:</label>
						<input type="date" name="toDate" value="@(((DateTime)ViewData["CurrentToDate"]).ToString("yyyy-MM-dd"))" class="form-control" />
					</div>
				</div>
				<div class="col-md-4">
				</div>
				<div class="col-md-4">
					<div class="form-actions no-color" style="text-align:end">
						<label></label>
						<p>
							<input type="text" name="SearchString" value="@ViewData["Searching"]" />
							<input type="submit" value="Search" class="btn btn-default" />
						</p>
					</div>
				</div>

			</div>

		</form>
	</div>
	<!-- /.card-header -->
	<div class="card-body">
		<table id="example1" class="table table-bordered table-striped">
			<thead>
				<tr>

					<th>
						NUM
					</th>
					<th>
						Model
					</th>
					<th>
						CH
					</th>

					<th>
						DateTime
					</th>
					<th>
						Speaker GRADE
					</th>
					<th>
						Speaker1 SPL[1kHz]
					</th>
					<th>
						Speaker1 Polarity
					</th>
					<th>
						Speaker1 THD[1KHz]
					</th>
					<th>
						Speaker1 Impedance[1KHz]
					</th>
					<th>
						Result
					</th>
					<th>
						Production Line
					</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var item in Model)
				{
					<tr>
						<td>
							<a asp-action="Details" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.NUM)</a>
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.Model)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.CH)
						</td>

						<td>
							@Html.DisplayFor(modelItem => item.DateTime)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.Grade)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.SPL_1kHz)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.Polarity)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.THD_1kHz)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.Impedance_1kHz)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.Result)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.ProductionLine.Name)
						</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
	<div class="row">
		<div class="col-md-6">
		</div>
		<div class="col-md-6">
			<nav>
				<ul class="pagination justify-content-end">
					<li class="page-item @(!Model.HasPreviousPage ? " disabled" : "") ">
						<a class="page-link" asp-route-pageNumber="@(Model.PageIndex - 1)">
							<span>Previous</span>
						</a>
					</li>
					@for (int i = startPage; i <= endPage; i++)
					{
						<li class="page-item @(Model.PageIndex == i ? " active" : "")">
							<a class="page-link" asp-route-pageNumber="@i">
								<span>@i</span>
							</a>
						</li>
					}
					<li class="page-item @(!Model.HasNextPage ? " disabled" : "") ">
						<a class="page-link" asp-route-pageNumber="@(Model.PageIndex + 1)">
							<span>Next</span>
						</a>
					</li>
				</ul>

			</nav>
		</div>
	</div>
</div>
