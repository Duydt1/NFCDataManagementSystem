@using static NFC.Data.Common.NFCUtil
@model PaginatedList<NFC.Models.NFCModel>
@{
	ViewData["Title"] = "Home Page";
	int currentPage = Model.PageIndex;
	int pageSize = Model.PageSize;
	int totalPages = Model.TotalPages;
	int startPage = Math.Max(1, currentPage - 2);
	int endPage = Math.Min(totalPages, currentPage + 2);
	var pageSizeOptions = new SelectList(new[] { 5, 10, 50, 100 }, ViewBag.PageSize);
}

<!-- Small boxes (Stat box) -->
<div class="row">
	<div class="col-lg-3 col-6">
		<!-- small box -->
		<div class="small-box bg-info">
			<div class="inner">
				<h3>@ViewData["HistoryUploadCount"]</h3>

				<p>Request Upload Data</p>
			</div>
			<div class="icon">
				<i class="ion ion-bag"></i>
			</div>
			<a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
		</div>
	</div>
	<!-- ./col -->
	<div class="col-lg-3 col-6">
		<!-- small box -->
		<div class="small-box bg-success">
			<div class="inner">
				<h3>53<sup style="font-size: 20px">%</sup></h3>

				<p>Bounce Rate</p>
			</div>
			<div class="icon">
				<i class="ion ion-stats-bars"></i>
			</div>
			<a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
		</div>
	</div>
	<!-- ./col -->
	<div class="col-lg-3 col-6">
		<!-- small box -->
		<div class="small-box bg-warning">
			<div class="inner">
				<h3>@ViewData["UserCount"]</h3>

				<p>User Registrations</p>
			</div>
			<div class="icon">
				<i class="ion ion-person-add"></i>
			</div>
			<a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
		</div>
	</div>
	<!-- ./col -->
	<div class="col-lg-3 col-6">
		<!-- small box -->
		<div class="small-box bg-danger">
			<div class="inner">
				<h3>65</h3>

				<p>Unique Visitors</p>
			</div>
			<div class="icon">
				<i class="ion ion-pie-graph"></i>
			</div>
			<a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
		</div>
	</div>
	<!-- ./col -->
</div>
<!-- /.row -->
<!-- Main row -->
<div class="card">
	<div class="card-header">
		<form asp-action="Index" method="get">

			<div class="row">
				<div class="col-md-2">
					<div class="form-group">
						<label for="fromDate">From Date:</label>
						<input type="date" name="fromDate" value="@(((DateTime)ViewData["CurrentFromDate"]).ToString("yyyy-MM-dd"))" class="form-control" />
					</div>
				</div>
				<div class="col-md-2">
					<div class="form-group">
						<label for="toDate">To Date:</label>
						<input type="date" name="toDate" value="@(((DateTime)ViewData["CurrentToDate"]).ToString("yyyy-MM-dd"))" class="form-control" />
					</div>
				</div>
				<div class="col-md-2">
					<div class="form-group">
						<label for="productionLineId">Production Line:</label>
						@Html.DropDownList("productionLineId", (SelectList)ViewData["ProductionLines"], new { @class = "form-control" })
					</div>
				</div>
				<div class="col-md-2">
					<div class="form-group">
						<label for="pageSize">Page Size:</label>
						<select name="pageSize" class="form-control" asp-items="@pageSizeOptions"></select>
					</div>
				</div>
				<div class="col-md-4">
					<div class="form-actions no-color" style="text-align:end">
						<label></label>
						<p>
							<input type="text" name="SearchString" value="@ViewData["Searching"]" />
							<input type="submit" value="Search" class="btn btn-default" />
						</p>
					</div>
				</div>

			</div>

		</form>
	</div>
	<!-- /.card-header -->
	<div class="card-body">
		<table class="table table-bordered table-striped" style="overflow:auto">
			<thead>
				<tr style="text-align:center">
					<th>
						NUM
					</th>
					<th>
						Model
					</th>
					<th>
						Date Time
					</th>
					<th colspan="7">
						KT TW SPL
					</th>
					<th colspan="3">
						SENSOR
					</th>
					<th colspan="8">
						KT MIC &amp; WF SPL
					</th>
					<th colspan="4">
						HEARING
					</th>
				</tr>
				<tr>

					<th>
					</th>
					<th>
					</th>

					<th>
					</th>
					<th>
						Speaker GRADE
					</th>

					<th>
						Speaker1 SPL[10kHz]
					</th>
					<th>
						Speaker1 Polarity
					</th>

					<th>
						Speaker1 THD[1KHz]
					</th>
					<th>
						Speaker1 Impedance[10kHz]
					</th>

					<th>
						Result
					</th>
					<th>
						CH
					</th>

					<th>
						Result
					</th>
					<th>
						DEVICE NO
					</th>
					<th>
						BATT. VOLT.
					</th>
					<th>
						"Speaker1 SPL[100Hz]
					</th>

					<th>
						Speaker1 SPL[1kHz]
					</th>
					<th>
						Speaker1 Polarity
					</th>

					<th>
						Speaker1 Impedance[1kHz]
					</th>
					<th>
						MIC1 SENS at 1kHz
					</th>
					<th>
						MIC1 Current
					</th>
					<th>
						Result
					</th>

					<th>
						CH
					</th>
					<th>
						Speaker1 SPL[1kHz]
					</th>

					<th>
						Result
					</th>
					<th>
						CH
					</th>
					<th>
						NUM
					</th>
				</tr>
				<tr>

					<th>Lower</th>
					<th></th>
					<th></th>
					<th>112,1</th>
					<th>101,1</th>
					<th>1</th>
					<th>0</th>
					<th>30,6</th>
					<th>
					</th>
					<th></th>
					<th></th>
					<th></th>
					<th>3,6</th>
					<th>105</th>

					<th>
						98,7
					</th>
					<th>

					</th>

					<th>
						28,9
					</th>
					<th>
						-41,5
					</th>
					<th>
						110
					</th>
					<th>
					</th>

					<th>
					</th>
					<th>
						70
					</th>

					<th>
					</th>
					<th>
					</th>
					<th>
					</th>
				</tr>
				<tr>
					<th>
						Upper
					</th>
					<th>
					</th>

					<th>
					</th>
					<th>
						116,2
					</th>

					<th>
						107,1
					</th>
					<th>
						1
					</th>

					<th>
						10
					</th>
					<th>
						41,1
					</th>

					<th>
					</th>
					<th>
					</th>

					<th>
					</th>
					<th>
					</th>
					<th>
						4,2
					</th>
					<th>
						109
					</th>

					<th>
						102,7
					</th>
					<th>
					</th>

					<th>
						39,1
					</th>
					<th>
						-33,5
					</th>
					<th>
						150
					</th>
					<th>
					</th>

					<th>
					</th>
					<th>
						100
					</th>

					<th>
					</th>
					<th>
					</th>
					<th>
					</th>
				</tr>
			</thead>
			<tbody>
				@if (Model.Any())
				{
					@foreach (var item in Model)
					{
						<tr>

							<td>
								@Html.DisplayFor(modelItem => item.NUM)
							</td>
							<td>
								@Html.DisplayFor(modelItem => item.Model)
							</td>
							<td>
								@Html.DisplayFor(modelItem => item.DateTime)
							</td>
							@if (item.KT_TW_SPL != null)
							{
								<td>
									@Html.DisplayFor(modelItem => item.KT_TW_SPL!.Grade)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.KT_TW_SPL!.SPL_1kHz)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.KT_TW_SPL!.Polarity)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.KT_TW_SPL!.THD_1kHz)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.KT_TW_SPL!.Impedance_1kHz)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.KT_TW_SPL!.Result)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.KT_TW_SPL!.CH)
								</td>
							}
							else
							{
								<td>
								</td>
								<td>
								</td>
								<td>
								</td>
								<td>
								</td>
								<td>
								</td>
								<td>
								</td>
								<td>
								</td>
							}
							@if (item.Sensor != null)
							{
								<td>
									@Html.DisplayFor(modelItem => item.Sensor!.Result)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.Sensor!.DeviceNo)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.Sensor!.BattVolt)
								</td>
							}
							else
							{
								<td>
								</td>
								<td>
								</td>
								<td>
								</td>
							}
							@if (item.KT_MIC_WF_SPL != null)
							{
								<td>
									@Html.DisplayFor(modelItem => item.KT_MIC_WF_SPL!.SPL_100Hz)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.KT_MIC_WF_SPL!.SPL_1kHz)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.KT_MIC_WF_SPL!.Polarity)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.KT_MIC_WF_SPL!.Impedance_1kHz)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.KT_MIC_WF_SPL!.MIC1SENS_1kHz)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.KT_MIC_WF_SPL!.MIC1Current)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.KT_MIC_WF_SPL!.Result)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.KT_MIC_WF_SPL!.CH)
								</td>
							}
							else
							{
								<td>
								</td>
								<td>
								</td>
								<td>
								</td>
								<td>
								</td>
								<td>
								</td>
								<td>
								</td>
								<td>
								</td>
								<td>
								</td>
							}
							@if (item.Hearing != null)
							{
								<td>
									@Html.DisplayFor(modelItem => item.Hearing!.Speaker1SPL_1kHz)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.Hearing!.Result)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.Hearing!.NUM)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.Hearing!.CH)
								</td>
							}
							else
							{
								<td>
								</td>
								<td>
								</td>
								<td>
								</td>
								<td>
								</td>
							}
						</tr>
					}
				}
			</tbody>
		</table>
	</div>
</div>
<div class="row">
	<div class="col-md-6">
	</div>
	<div class="col-md-6">
		<nav>
			<ul class="pagination justify-content-end">
				<li class="page-item @(!Model.HasPreviousPage? " disabled" : "") ">
					<a class="page-link" asp-route-pageNumber="1"
					   asp-route-fromDate="@(((DateTime)ViewData["CurrentFromDate"]).ToString("yyyy-MM-dd"))"
					   asp-route-toDate="@(((DateTime)ViewData["CurrentToDate"]).ToString("yyyy-MM-dd"))"
					   asp-route-pageSize="@ViewBag.PageSize"
					   asp-route-SearchString="@ViewData["Searching"]">
						<span>First</span>
					</a>
				</li>
				<li class="page-item @(!Model.HasPreviousPage? " disabled" : "") ">
					<a class="page-link" asp-route-pageNumber="@(Model.PageIndex - 1)"
					   asp-route-fromDate="@(((DateTime)ViewData["CurrentFromDate"]).ToString("yyyy-MM-dd"))"
					   asp-route-toDate="@(((DateTime)ViewData["CurrentToDate"]).ToString("yyyy-MM-dd"))"
					   asp-route-pageSize="@ViewBag.PageSize"
					   asp-route-SearchString="@ViewData["Searching"]">
						<span>Previous</span>
					</a>
				</li>
				@for (int i = startPage; i <= endPage; i++)
				{
					<li class="page-item @(Model.PageIndex == i? " active" : "")">
						<a class="page-link" asp-route-pageNumber="@i"
						   asp-route-fromDate="@(((DateTime)ViewData["CurrentFromDate"]).ToString("yyyy-MM-dd"))"
						   asp-route-toDate="@(((DateTime)ViewData["CurrentToDate"]).ToString("yyyy-MM-dd"))"
						   asp-route-pageSize="@ViewBag.PageSize"
						   asp-route-SearchString="@ViewData["Searching"]">
							<span>@i</span>
						</a>
					</li>
				}
				<li class="page-item @(!Model.HasNextPage? " disabled" : "") ">
					<a class="page-link" asp-route-pageNumber="@(Model.PageIndex + 1)"
					   asp-route-fromDate="@(((DateTime)ViewData["CurrentFromDate"]).ToString("yyyy-MM-dd"))"
					   asp-route-toDate="@(((DateTime)ViewData["CurrentToDate"]).ToString("yyyy-MM-dd"))"
					   asp-route-pageSize="@ViewBag.PageSize"
					   asp-route-SearchString="@ViewData["Searching"]">
						<span>Next</span>
					</a>
				</li>
				<li class="page-item @(!Model.HasNextPage? " disabled" : "") ">
					<a class="page-link" asp-route-pageNumber="@endPage"
					   asp-route-fromDate="@(((DateTime)ViewData["CurrentFromDate"]).ToString("yyyy-MM-dd"))"
					   asp-route-toDate="@(((DateTime)ViewData["CurrentToDate"]).ToString("yyyy-MM-dd"))"
					   asp-route-pageSize="@ViewBag.PageSize"
					   asp-route-SearchString="@ViewData["Searching"]">
						<span>Last</span>
					</a>
				</li>
			</ul>

		</nav>
	</div>
</div>
<!-- /.row (main row) -->
